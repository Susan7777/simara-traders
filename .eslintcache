[{"D:\\Project\\simara-traders\\src\\index.js":"1","D:\\Project\\simara-traders\\src\\reportWebVitals.js":"2","D:\\Project\\simara-traders\\src\\App.js":"3","D:\\Project\\simara-traders\\src\\store\\reducers\\rootReducer.js":"4","D:\\Project\\simara-traders\\src\\store\\reducers\\clientReducer.js":"5","D:\\Project\\simara-traders\\src\\store\\reducers\\authReducers.js":"6","D:\\Project\\simara-traders\\src\\components\\dashboard\\dashboard.js":"7","D:\\Project\\simara-traders\\src\\config\\fbConfig.js":"8","D:\\Project\\simara-traders\\src\\components\\dashboard\\addClient.js":"9","D:\\Project\\simara-traders\\src\\components\\dashboard\\AddClient.js":"10","D:\\Project\\simara-traders\\src\\components\\dashboard\\Dashboard.js":"11","D:\\Project\\simara-traders\\src\\store\\actions\\clientActions.js":"12","D:\\Project\\simara-traders\\src\\components\\dashboard\\ClientList.js":"13","D:\\Project\\simara-traders\\src\\components\\dashboard\\ClientDetail.js":"14","D:\\Project\\simara-traders\\src\\common\\Spinner.js":"15","D:\\Project\\simara-traders\\src\\components\\auth\\SignIn.js":"16","D:\\Project\\simara-traders\\src\\store\\actions\\authActions.js":"17","D:\\Project\\simara-traders\\src\\components\\dashboard\\Home.js":"18"},{"size":1422,"mtime":1609785199481,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":856,"mtime":1609958021975,"results":"22","hashOfConfig":"20"},{"size":439,"mtime":1609842819043,"results":"23","hashOfConfig":"20"},{"size":1012,"mtime":1609950204184,"results":"24","hashOfConfig":"20"},{"size":636,"mtime":1609958813971,"results":"25","hashOfConfig":"20"},{"size":2738,"mtime":1609866021983,"results":"26","hashOfConfig":"27"},{"size":614,"mtime":1609784990129,"results":"28","hashOfConfig":"20"},{"size":4471,"mtime":1609864522230,"results":"29","hashOfConfig":"27"},{"size":6075,"mtime":1609959558813,"results":"30","hashOfConfig":"20"},{"size":2674,"mtime":1609959560457,"results":"31","hashOfConfig":"20"},{"size":2331,"mtime":1609951809973,"results":"32","hashOfConfig":"20"},{"size":3887,"mtime":1609953950577,"results":"33","hashOfConfig":"20"},{"size":5819,"mtime":1609958128383,"results":"34","hashOfConfig":"20"},{"size":389,"mtime":1609950768787,"results":"35","hashOfConfig":"20"},{"size":4273,"mtime":1609957480172,"results":"36","hashOfConfig":"20"},{"size":992,"mtime":1609958779919,"results":"37","hashOfConfig":"20"},{"size":1832,"mtime":1609958419823,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"228o1h",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k046fn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"D:\\Project\\simara-traders\\src\\index.js",["82","83","84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from \"./config/fbConfig\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk.withExtraArgument({ getFirebase })));\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["85","86"],"D:\\Project\\simara-traders\\src\\reportWebVitals.js",[],"D:\\Project\\simara-traders\\src\\App.js",[],"D:\\Project\\simara-traders\\src\\store\\reducers\\rootReducer.js",[],"D:\\Project\\simara-traders\\src\\store\\reducers\\clientReducer.js",[],"D:\\Project\\simara-traders\\src\\store\\reducers\\authReducers.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\dashboard.js",["87"],"D:\\Project\\simara-traders\\src\\config\\fbConfig.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\addClient.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\AddClient.js",["88","89"],"import { Button, Col, Form, Input, Row, Layout } from \"antd\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../common/Spinner\";\r\nimport { addClientAction } from \"../../store/actions/clientActions\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nclass AddClient extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buttonClick: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const showClick = () => {\r\n            window.location.href = \"/dashboard\";\r\n        }\r\n\r\n        const saveClient = (value) => {\r\n            this.setState({\r\n                buttonClick: true\r\n            })\r\n            this.props.addClient(value);\r\n            // window.location.href = \"/\";\r\n        }\r\n\r\n        return (\r\n            <Spinner spinning={this.state.buttonClick}>\r\n                {this.props.auth.uid !== undefined ? (<div>\r\n                    <Header style={{ background: \"lightgreen\", padding: \"0 40px\" }}>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                <h3 onClick={() => window.location.href = \"/dashboard\"} style={{ cursor: \"pointer\" }}><b>SIMARA TRADERS</b></h3>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                <div style={{ float: \"right\" }}>\r\n                                    <a style={{ color: \"black\", cursor: \"pointer\", fontWeight: \"bold\" }} onClick={showClick}>Client List</a>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Content\r\n                        className=\"site-layout\"\r\n                        style={{\r\n                            margin: \"40px 40px 20px 40px\",\r\n                            minHeight: 400,\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n                        <Form layout=\"vertical\" onFinish={saveClient}>\r\n                            <Row gutter={30}>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                    <Form.Item\r\n                                        hasFeedback\r\n                                        label=\"Client Name\"\r\n                                        name=\"name\"\r\n                                    >\r\n                                        <Input placeholder=\"Enter client name\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                    <Form.Item\r\n                                        hasFeedback\r\n                                        label=\"Shop Name\"\r\n                                        name=\"shop\"\r\n                                    >\r\n                                        <Input placeholder=\"Enter shop name\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                    <Form.Item\r\n                                        hasFeedback\r\n                                        label=\"Shop Address\"\r\n                                        name=\"address\"\r\n                                    >\r\n                                        <Input placeholder=\"Enter client address\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                    <Form.Item\r\n                                        hasFeedback\r\n                                        label=\"Client Contact Number\"\r\n                                        name=\"contact\"\r\n                                    >\r\n                                        <Input placeholder=\"Enter client contact number\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                    <Form.Item\r\n                                        hasFeedback\r\n                                        label=\"Client Gmail Id\"\r\n                                        name=\"mail\"\r\n                                    >\r\n                                        <Input placeholder=\"Enter client gmail id\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    htmlType=\"submit\"\r\n                                    type=\"primary\"\r\n                                    style={{\r\n                                        width: 80,\r\n                                        marginTop: 15,\r\n                                        fontWeight: \"bold\"\r\n                                    }}\r\n                                    size=\"middle\"\r\n                                >\r\n                                    Save\r\n                            </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Content>\r\n                </div>) : <div style={{ marginTop: 100, textAlign: \"center\" }}>\r\n                        <h1>Please login first!!!</h1>\r\n                    </div>}\r\n\r\n            </Spinner>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addClient: client => dispatch(addClientAction(client))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);","D:\\Project\\simara-traders\\src\\components\\dashboard\\Dashboard.js",["90"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport { Header } from 'antd/lib/layout/layout';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport ClientList from './ClientList';\r\nimport Spinner from '../../common/Spinner';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { signOutAction } from '../../store/actions/authActions';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n\r\n        console.log(this.props.auth.uid);\r\n\r\n        const addClick = () => {\r\n            window.location.href = \"/add-client\";\r\n        }\r\n\r\n        const signOutClick = () => {\r\n            this.props.signOut();\r\n        }\r\n\r\n        return (\r\n            <Spinner spinning={this.props.loading.clients}>\r\n                {this.props.auth.uid !== undefined ? (\r\n                    <div>\r\n                        <Header style={{ background: \"lightgreen\", padding: \"0 15px\" }}>\r\n                            <Row>\r\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                    <h2 onClick={() => window.location.href = \"/dashboard\"} style={{ cursor: \"pointer\" }}><b>SIMARA TRADERS</b></h2>\r\n                                </Col>\r\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                    <div style={{ float: \"right\" }}>\r\n                                        <a style={{ color: \"black\", cursor: \"pointer\", fontWeight: \"bold\" }} onClick={addClick}>Add Client</a>\r\n                                        <Button type=\"primary\" danger size=\"small\" style={{ marginLeft: 15 }} onClick={signOutClick}>Logout</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Header>\r\n\r\n                        <ClientList client={this.props.clients} />\r\n                    </div>\r\n\r\n                ) : <div style={{ marginTop: 100, textAlign: \"center\" }}>\r\n                        <h1>Please login first!!!</h1>\r\n                    </div>}\r\n            </Spinner>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        clients: state.firestore.ordered.clients,\r\n        loading: state.firestore.status.requesting,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOutAction())\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\r\n    collection: \"clients\"\r\n}]))(Dashboard);","D:\\Project\\simara-traders\\src\\store\\actions\\clientActions.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\ClientList.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\ClientDetail.js",["91","92"],"import { Button, Col, Form, Input, Row, Layout } from \"antd\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport Spinner from \"../../common/Spinner\";\r\nimport { updateClientAction } from \"../../store/actions/clientActions\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst ClientDetail = (props) => {\r\n\r\n    const [buttonClick, setButtonClick] = useState(false);\r\n\r\n    const [myForm] = Form.useForm();\r\n    const { clients } = props;\r\n\r\n    const showClick = () => {\r\n        window.location.href = \"/dashboard\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (clients) {\r\n            myForm.setFieldsValue({\r\n                name: clients.name,\r\n                shop: clients.shop,\r\n                address: clients.address,\r\n                contact: clients.contact,\r\n                mail: clients.mail\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateClientDetail = (value) => {\r\n        setButtonClick(true)\r\n        props.updateClient(value);\r\n    }\r\n\r\n    return (\r\n        <Spinner spinning={buttonClick || props.loading.clients}>\r\n            <Header style={{ background: \"lightgreen\", padding: \"0 40px\" }}>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <h2 onClick={() => window.location.href = \"/dashboard\"} style={{ cursor: \"pointer\" }}><b>SIMARA TRADERS</b></h2>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <div style={{ float: \"right\" }}>\r\n                            <a style={{ color: \"black\", cursor: \"pointer\", fontWeight: \"bold\" }} onClick={showClick}>Client List</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Header>\r\n            <Content\r\n                className=\"site-layout\"\r\n                style={{\r\n                    margin: \"40px 40px 20px 40px\",\r\n                    minHeight: 400,\r\n                    color: \"#fff\",\r\n                }}\r\n            >\r\n                <Form layout=\"vertical\" form={myForm} onFinish={updateClientDetail}>\r\n                    <Row gutter={30}>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                            <Form.Item\r\n                                hasFeedback\r\n                                label=\"Client Name\"\r\n                                name=\"name\"\r\n                            >\r\n                                <Input placeholder=\"Enter client name\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                            <Form.Item\r\n                                hasFeedback\r\n                                label=\"Shop Name\"\r\n                                name=\"shop\"\r\n                            >\r\n                                <Input placeholder=\"Enter shop name\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                            <Form.Item\r\n                                hasFeedback\r\n                                label=\"Shop Address\"\r\n                                name=\"address\"\r\n                            >\r\n                                <Input placeholder=\"Enter client address\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                            <Form.Item\r\n                                hasFeedback\r\n                                label=\"Client Contact Number\"\r\n                                name=\"contact\"\r\n                            >\r\n                                <Input placeholder=\"Enter client contact number\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                            <Form.Item\r\n                                hasFeedback\r\n                                label=\"Client Gmail Id\"\r\n                                name=\"mail\"\r\n                            >\r\n                                <Input placeholder=\"Enter client gmail id\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Item>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{\r\n                                width: 80,\r\n                                marginTop: 15,\r\n                                fontWeight: \"bold\"\r\n                            }}\r\n                            size=\"middle\"\r\n                        >\r\n                            Update\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Content>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const clients = state.firestore.data.clients;\r\n    const client = clients ? clients[id] : null\r\n    return {\r\n        clients: client,\r\n        loading: state.firestore.status.requesting\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    return {\r\n        updateClient: client => dispatch(updateClientAction(id, client))\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\r\n    collection: \"clients\"\r\n}]))(ClientDetail);","D:\\Project\\simara-traders\\src\\common\\Spinner.js",[],"D:\\Project\\simara-traders\\src\\components\\auth\\SignIn.js",["93"],"import React, { Component } from \"react\";\r\nimport { Button, Col, Form, Input, Row, Layout } from \"antd\";\r\nimport style from \"../style/style.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction } from \"../../store/actions/authActions\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nclass SignIn extends Component {\r\n    render() {\r\n\r\n        const onLogin = (value) => {\r\n            this.props.signIn(value);\r\n        }\r\n        return (\r\n            <div>\r\n                <Header style={{ background: \"lightgreen\", padding: \"0 15px\" }}>\r\n                    <Row>\r\n                        <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <h3 onClick={() => window.location.href = \"/\"} style={{ cursor: \"pointer\" }}><b>SIMARA TRADERS</b></h3>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content\r\n                    style={{\r\n                        margin: \"40px 40px 20px 40px\",\r\n                        minHeight: 400,\r\n                        color: \"#fff\",\r\n                    }}\r\n                >\r\n                    <Row>\r\n                        <Col xs={0} sm={0} md={4} lg={4} xl={6} xxl={8}></Col>\r\n                        <Col xs={24} sm={24} md={16} lg={16} xl={12} xxl={8}>\r\n                            <Form layout=\"vertical\" onFinish={onLogin}>\r\n                                <Row gutter={30}>\r\n                                    <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                        <Form.Item\r\n                                            hasFeedback\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[\r\n                                                { required: true, message: \"This field is required with valid email!!!\", type: \"email\" },\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"Enter email\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n                                        <Form.Item\r\n                                            hasFeedback\r\n                                            label=\"Password\"\r\n                                            name=\"password\"\r\n                                            rules={[\r\n                                                { required: true, message: \"This field is required!!!\" }\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password placeholder=\"Enter password\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Item>\r\n                                    <Button\r\n                                        htmlType=\"submit\"\r\n                                        type=\"primary\"\r\n                                        style={{\r\n                                            width: 80,\r\n                                            marginTop: 15,\r\n                                            fontWeight: \"bold\"\r\n                                        }}\r\n                                        size=\"middle\"\r\n                                    >\r\n                                        Login\r\n                            </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={4} lg={4} xl={6} xxl={8}></Col>\r\n\r\n                    </Row>\r\n\r\n                </Content>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: creds => dispatch(signInAction(creds))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);","D:\\Project\\simara-traders\\src\\store\\actions\\authActions.js",[],"D:\\Project\\simara-traders\\src\\components\\dashboard\\Home.js",["94","95","96","97","98"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport ClientList from './ClientList';\r\nimport Spinner from '../../common/Spinner';\r\nimport { Button, Col, Row, Layout } from 'antd';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const loginButton = () => {\r\n            window.location.href = \"/signin\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header style={{ background: \"lightgreen\", padding: \"0 40px\" }}>\r\n                    <Row>\r\n                        <Col xs={18} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <h2 onClick={() => window.location.href = \"/\"} style={{ cursor: \"pointer\" }}><b>SIMARA TRADERS</b></h2>\r\n                        </Col>\r\n                        <Col xs={6} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <div style={{ float: \"right\" }}>\r\n                                <Button type=\"primary\" size=\"small\" style={{ marginLeft: 15 }} onClick={loginButton}>Login</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content style={{\r\n                    margin: \"40px 40px 20px 40px\",\r\n                    minHeight: 400,\r\n                    color: \"#fff\",\r\n                }}>\r\n                    <div style={{ textAlign: \"center\", marginTop: 120 }}>\r\n                        <h1><b>WELCOME TO SIMARA TRADERS</b></h1>\r\n                        <h3>Please login to navigate in dashboard!!!</h3>\r\n                    </div>\r\n                </Content>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;",{"ruleId":"99","severity":1,"message":"100","line":6,"column":40,"nodeType":"101","messageId":"102","endLine":6,"endColumn":47},{"ruleId":"99","severity":1,"message":"103","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":24},{"ruleId":"99","severity":1,"message":"104","line":10,"column":26,"nodeType":"101","messageId":"102","endLine":10,"endColumn":38},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":85,"column":21,"nodeType":"111","endLine":85,"endColumn":43},{"ruleId":"99","severity":1,"message":"112","line":2,"column":28,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":42,"column":37,"nodeType":"111","endLine":42,"endColumn":126},{"ruleId":"109","severity":1,"message":"110","line":38,"column":41,"nodeType":"111","endLine":38,"endColumn":129},{"ruleId":"99","severity":1,"message":"113","line":2,"column":17,"nodeType":"101","messageId":"102","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":48,"column":29,"nodeType":"111","endLine":48,"endColumn":118},{"ruleId":"99","severity":1,"message":"114","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"115","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":17},{"ruleId":"99","severity":1,"message":"116","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":26},{"ruleId":"99","severity":1,"message":"117","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"118","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":15},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'reduxFirestore' is defined but never used.","'getFirestore' is defined but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Component' is defined but never used.","'style' is defined but never used.","'connect' is defined but never used.","'firestoreConnect' is defined but never used.","'ClientList' is defined but never used.","'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation"]